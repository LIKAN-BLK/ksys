1.Каким образом реализована идея “Everything is Object”, в чем этом выражается?
Аналогично парадигме “Everything is file” из unix, где система представляет из себя набор файлов, Fiasco.OC является набором объектов, взаимодействующий друг с другом посредством предоставления различных сервисов.
2. Что такое Capability list, зачем он нужен?
Capability list – свойство процесса. Список, перечисляющий объекты, с которыми может взаимодействовать процесс. Аналогичен списку открытых файловых дескрипторов из Linux. 
3. Где находится scheduler и почему?
  Scheduling является жизненно важной функцией, поэтому 	scheduler находится в ядре. Это позволяет сделать ядро независимым от пользовательских приложений, упростить взаимодействие scheduler и остальной части ядра.
4. Что такое Sigma0, Moe, Ned, и зачем они нужны?
	Sigma0 и Moe – являются менеджерами ресурсов. Moe стартует в системе первым (root-task). Реализует такие механизмы, как dataspaces и region mapper, так же на него возложены некоторые операции планирования и работы с виртуальной памятью. Sigma0 (Root Pager) – специальный сервер, служащий для обработки page faults.   Ned (init процесс по умолчанию) введен для избежания зацикленных зависимостей. Конфигурируется при помощи Lua скриптов.
5. Что собой представляет L4Re?
	L4Re является набором компонентов и программ, работающих в пространстве пользователя. Они дополняют функционал микроядра до функционала монолитного ядра ос, те реализуют такие вещи, как управление ресурсами, запуск задач, реализация IPC, базовые библиотеки.
6. Что является execution unit в концепции Fiasco.OC ?
	Execution unit в fiasco.oc – это тред, поток или нить (thread), кому как больше нравится. 
7.Что такое TCB, чет отличается от UTCB, что такое Kernel Info Block, где находится каждая из этих структур, зачем она нужна и как с ними можно работать?
	Thread Control Block – «ядерная» структура, хранящая информацию о треде. Уникальна для каждого треда. User-level Thread Control Block  - структура в АП треда. Хранит информацию, которой нет необходимости доверять. Чаще всего используется для хранения параметров системного вызова. Kernel Info Page – страница памяти, отображенная в АП каждого процесса. Хранит информацию о ядре (версия, конфигурационные особенности, system call entry code).
8.Какие механизмы сериализации доступа к переменным были озвучены в лекции?
- Отключение прерываний – неприменимо для user-space.
- Зацикливание (spinning) – расходует ресурсы процессора.
- Использование блокировок из pthread_mutex
- Использование  для синхронизации специального треда – Serializer.
9. l4_msgtag() генерирует структуру типа l4_msgtag_t, хранящую информацию о сообщении. l4_ipc_send() отправляет сообщение целевому объекту.












