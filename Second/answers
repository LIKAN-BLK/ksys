1.  Что такое factory, каким образом используется и для чего?
Для создания новых объектов в ядре существует специальный объект – Factory.  При использовании, сначала надо получить доступ к окружению процесса, а затем получать capability объекта factory.
L4::Factory *f1 = L4Re::Env::env()->factory();
2. Что такое target_cap, thread_cap? Область видимости gate?
Указателем на свободное место в таблице возможностей процесса храниться в переменной target_cap. Thread_cap определяет поток (thread), с которым необходимо связать объект gate. Сообщения через gate могут отправлять любые потоки (thread), но получают лишь те, которые связаны с этим объектом.
3.Структура utcb и назначение каждого из полей.
	User-level Thread Control Block. Состоит из трех групп регистров: message registers, buffer registers и thread control registers.
Message registers – хранят параметры системных вызовов. Например, передаваемые данные для ipc. Для работы с flexpage служат buffer registers. Сведения о thread хранятся в thread control registers.
4.Что происходит, когда истекает timout в ipc?
	Когда истекает время, указанное в timeout, процесс-отправитель выходит из состояния блокировки и продолжает дальнейшую работу.
5.Есть ли ограничения на длинну ipc message?
	UTCB имеет конечный размер, следовательно, длинна сообщения тоже ограничена.ё
6.Что такое IDL compiler, зачем он нужен и какие проблемы решает?
	Проблема состоит в том, что написанный в ручную код, обеспечивающий межпроцессорное взаимодействие, как правило склонен к большему числу ошибок. Так как данная задача легко формализуема, был создан инструмент для автоматической генерации подобного кода - IDL Compiler, использующий Interface Definition Language.
7.Как эти проблемы решены в gnu/mach (вдруг вы знаете), как он решаются в l4re?
	L4Re для упрощения работы с ipc использует такой стандартный инструмент С++, как потоки (streams).
8. Communication channel и ipc gate - одно и то же?
	Gate предоставляет средства для создания защищенных коммуникационных каналов. (Не одно и тоже)
9. Так все же, каким образом сервер узнают какую dispatch функцию вызывать?
	Сервер обладает особым объектом registry, который хранит в себе различные серверные объекты (сервисы). Такой объект можно найти по его ID с помощью функции find.
10.А если у нас несколько каналов?
	ID передаваемый find(), может являться меткой (label) для ipc gate. Для простоты, в качестве label следует использовать адрес обработчика.
11.Опишите пожалуйста механизм работы sigma0, каким образом обрабатываются page fault?
	Page fault обрабатывается при помощи специального обработчика – pager, который уникален для каждого thread. Page fault обрабатывается ядром при помощи page fault handler (не путать с pager). Page fault handler отправляет информацию pager при помощи обычного ipc. Pager принимает решения о том, какие страницы необходимо загрузить и отправляет соответствующую информацию ядру. 
……
12.if (У каждого треда есть pager - обработчик page fault.)
	printf (“true”);
……
$./test 
true
13.Что такое flexpage и зачем это нужно?
	Диапазон, который нужно отобразить в память передается от pager клиенту в специальной структуре flexpage.
14.Опишите пожалуйста проблему иерархических мапингов и метод ее решения в fiasco.oc
При данной системе отображения может получится так, что несколько областей памяти одного приложения обрабатываются разными pager-ами. Соответственно встает проблема, как определить, какому pager ядро отправит сообщение об ошибке.
	Для решения этой проблемы был введен ещё один уровень абстракции. У каждой задачи есть свой, так называемый, region mapper, который хранит в себе информацию о соответствии областей памяти и pager-ов.
15.Что такое dataspace, каким образом с этой абстракцией осуществляется работа?
	Dataspace – общая абстракция для отображения памяти. Приложение получает capability для доступа к dataspace. Приложение запрашивает rm присоединить dataspace к виртуальному ап. Далее приложение использует dataspace просто обращаясь к памяти.
16.Как используя dataspace передавать данные между серверами?
Оба сервера должны присоединить к своему ап один и тот же dataspace, аналогично разделяемой памяти в unix.

  






	
 


